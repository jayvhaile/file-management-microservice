apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include ".helm-chart.fullname" . }}
  labels:
    {{- include ".helm-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include ".helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include ".helm-chart.labels" . | nindent 8 }}
 {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include ".helm-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: AWS_ACCESS_KEY_ID
              value: {{ required "A valid .Values.aws.credentials.accessKeyId is required!" .Values.aws.credentials.accessKeyId | quote }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ required "A valid .Values.aws.credentials.secretAccessKey is required!" .Values.aws.credentials.secretAccessKey | quote }}
            - name: AWS_S3_BUCKET_NAME
              value: {{ required "A valid .Values.aws.s3BucketName is required!" .Values.aws.s3BucketName | quote }}
            - name: AWS_REGION
              value: {{ required "A valid .Values.aws.region is required!" .Values.aws.region | quote }}
            - name: MONGO_URL
              value: {{ required "A valid .Values.database.mongoUrl is required!" .Values.database.mongoUrl | quote }}
            - name: PORT
              value: {{ required "A valid .Values.service.port is required!" .Values.service.port | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
